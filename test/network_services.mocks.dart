// Mocks generated by Mockito 5.2.0 from annotations
// in vegan_liverpool/test/network_services.dart.
// Do not manually edit this file.

import 'dart:async' as _i9;
import 'dart:io' as _i11;
import 'dart:ui' as _i16;

import 'package:auto_route/auto_route.dart' as _i5;
import 'package:auto_route/src/matcher/route_matcher.dart' as _i4;
import 'package:auto_route/src/router/controller/pageless_routes_observer.dart'
    as _i7;
import 'package:auto_route/src/router/controller/routing_controller.dart'
    as _i15;
import 'package:dio/dio.dart' as _i2;
import 'package:flutter/material.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:vegan_liverpool/common/router/route_guards.dart' as _i3;
import 'package:vegan_liverpool/common/router/routes.gr.dart' as _i14;
import 'package:wallet_core/src/graph.dart' as _i8;
import 'package:wallet_core/src/studio_api.dart' as _i10;
import 'package:wallet_core/src/wallet_api.dart' as _i12;
import 'package:wallet_core/src/web3.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeOptions_0 extends _i1.Fake implements _i2.Options {}

class _FakeAuthGuard_1 extends _i1.Fake implements _i3.AuthGuard {}

class _FakeRouteMatcher_2 extends _i1.Fake implements _i4.RouteMatcher {}

class _FakeRouteCollection_3 extends _i1.Fake implements _i4.RouteCollection {}

class _FakeRouteData_4 extends _i1.Fake implements _i5.RouteData {}

class _FakeAutoRoutePage_5<T> extends _i1.Fake implements _i5.AutoRoutePage<T> {
}

class _FakeNavigationHistory_6 extends _i1.Fake
    implements _i5.NavigationHistory {}

class _FakeLocalKey_7 extends _i1.Fake implements _i6.LocalKey {}

class _FakePendingRoutesHandler_8 extends _i1.Fake
    implements _i5.PendingRoutesHandler {}

class _FakePagelessRoutesObserver_9 extends _i1.Fake
    implements _i7.PagelessRoutesObserver {}

class _FakeActiveGuardObserver_10 extends _i1.Fake
    implements _i5.ActiveGuardObserver {}

class _FakeGlobalKey_11<T extends _i6.State<_i6.StatefulWidget>>
    extends _i1.Fake implements _i6.GlobalKey<T> {}

class _FakeUrlState_12 extends _i1.Fake implements _i5.UrlState {}

class _FakeStackRouter_13 extends _i1.Fake implements _i5.StackRouter {}

class _FakeRouteMatch_14<T> extends _i1.Fake implements _i5.RouteMatch<T> {}

class _FakeAutoRouteInformationProvider_15 extends _i1.Fake
    implements _i5.AutoRouteInformationProvider {}

class _FakeAutoRouterDelegate_16 extends _i1.Fake
    implements _i5.AutoRouterDelegate {}

class _FakeDefaultRouteParser_17 extends _i1.Fake
    implements _i5.DefaultRouteParser {}

class _FakeRoutingController_18 extends _i1.Fake
    implements _i5.RoutingController {}

/// A class which mocks [Graph].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraph extends _i1.Mock implements _i8.Graph {
  MockGraph() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<dynamic> getCollectiblesByOwner(String? owner) =>
      (super.noSuchMethod(Invocation.method(#getCollectiblesByOwner, [owner]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> getCommunityByAddress(String? communityAddress) =>
      (super.noSuchMethod(
          Invocation.method(#getCommunityByAddress, [communityAddress]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> getCommunityBusinesses(String? communityAddress) =>
      (super.noSuchMethod(
          Invocation.method(#getCommunityBusinesses, [communityAddress]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> getHomeBridgedToken(
          String? foreignTokenAddress, bool? isRopsten) =>
      (super.noSuchMethod(
          Invocation.method(
              #getHomeBridgedToken, [foreignTokenAddress, isRopsten]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<bool> isCommunityMember(
          String? accountAddress, String? entitiesListAddress) =>
      (super.noSuchMethod(
          Invocation.method(
              #isCommunityMember, [accountAddress, entitiesListAddress]),
          returnValue: Future<bool>.value(false)) as _i9.Future<bool>);
}

/// A class which mocks [StudioApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockStudioApi extends _i1.Mock implements _i10.StudioApi {
  MockStudioApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<dynamic> getCommunityData(String? communityAddress,
          {String? walletAddress}) =>
      (super.noSuchMethod(
          Invocation.method(#getCommunityData, [communityAddress],
              {#walletAddress: walletAddress}),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> getBusinessList(String? communityAddress) => (super
      .noSuchMethod(Invocation.method(#getBusinessList, [communityAddress]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> getEntityMetadata(
          String? communityAddress, String? account,
          {bool? isRopsten = false}) =>
      (super.noSuchMethod(
          Invocation.method(#getEntityMetadata, [communityAddress, account],
              {#isRopsten: isRopsten}),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> uploadImage(_i11.File? imageFile) =>
      (super.noSuchMethod(Invocation.method(#uploadImage, [imageFile]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> fetchMetadata(String? uri) =>
      (super.noSuchMethod(Invocation.method(#fetchMetadata, [uri]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
}

/// A class which mocks [WalletApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletApi extends _i1.Mock implements _i12.WalletApi {
  MockWalletApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Options get options => (super.noSuchMethod(Invocation.getter(#options),
      returnValue: _FakeOptions_0()) as _i2.Options);
  @override
  void setJwtToken(String? value) =>
      super.noSuchMethod(Invocation.method(#setJwtToken, [value]),
          returnValueForMissingStub: null);
  @override
  _i9.Future<String> loginWithFirebase(
          String? token, String? accountAddress, String? identifier,
          {String? appName}) =>
      (super.noSuchMethod(
          Invocation.method(#loginWithFirebase,
              [token, accountAddress, identifier], {#appName: appName}),
          returnValue: Future<String>.value('')) as _i9.Future<String>);
  @override
  _i9.Future<bool> loginWithSMS(String? phoneNumber) =>
      (super.noSuchMethod(Invocation.method(#loginWithSMS, [phoneNumber]),
          returnValue: Future<bool>.value(false)) as _i9.Future<bool>);
  @override
  _i9.Future<String> verifySMS(
          String? verificationCode, String? phoneNumber, String? accountAddress,
          {String? appName}) =>
      (super.noSuchMethod(
          Invocation.method(
              #verifySMS,
              [verificationCode, phoneNumber, accountAddress],
              {#appName: appName}),
          returnValue: Future<String>.value('')) as _i9.Future<String>);
  @override
  _i9.Future<String> requestToken(String? phoneNumber, String? accountAddress,
          {String? appName}) =>
      (super.noSuchMethod(
          Invocation.method(#requestToken, [phoneNumber, accountAddress],
              {#appName: appName}),
          returnValue: Future<String>.value('')) as _i9.Future<String>);
  @override
  _i9.Future<dynamic> createWallet(
          {String? communityAddress, String? referralAddress}) =>
      (super.noSuchMethod(
          Invocation.method(#createWallet, [], {
            #communityAddress: communityAddress,
            #referralAddress: referralAddress
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> getWallet() =>
      (super.noSuchMethod(Invocation.method(#getWallet, []),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<Map<String, dynamic>> getActionsByWalletAddress(
          String? walletAddress,
          {int? updatedAt = 0,
          String? tokenAddress}) =>
      (super.noSuchMethod(
              Invocation.method(#getActionsByWalletAddress, [walletAddress],
                  {#updatedAt: updatedAt, #tokenAddress: tokenAddress}),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i9.Future<Map<String, dynamic>>);
  @override
  _i9.Future<Map<String, dynamic>> getPaginatedActionsByWalletAddress(
          String? walletAddress, int? pageIndex, {String? tokenAddress}) =>
      (super.noSuchMethod(
              Invocation.method(#getPaginatedActionsByWalletAddress,
                  [walletAddress, pageIndex], {#tokenAddress: tokenAddress}),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i9.Future<Map<String, dynamic>>);
  @override
  _i9.Future<dynamic> getAvailableUpgrades(String? walletAddress) => (super
      .noSuchMethod(Invocation.method(#getAvailableUpgrades, [walletAddress]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> installUpgrades(
          _i13.Web3? web3,
          String? walletAddress,
          String? disableModuleName,
          String? disableModuleAddress,
          String? enableModuleAddress,
          String? upgradeId) =>
      (super.noSuchMethod(
          Invocation.method(#installUpgrades, [
            web3,
            walletAddress,
            disableModuleName,
            disableModuleAddress,
            enableModuleAddress,
            upgradeId
          ]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<Map<String, dynamic>> getNextReward(String? walletAddress) =>
      (super.noSuchMethod(Invocation.method(#getNextReward, [walletAddress]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i9.Future<Map<String, dynamic>>);
  @override
  _i9.Future<Map<String, dynamic>> claimReward(String? walletAddress) =>
      (super.noSuchMethod(Invocation.method(#claimReward, [walletAddress]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i9.Future<Map<String, dynamic>>);
  @override
  _i9.Future<Map<String, dynamic>> enableWalletApy(String? walletAddress) =>
      (super.noSuchMethod(Invocation.method(#enableWalletApy, [walletAddress]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i9.Future<Map<String, dynamic>>);
  @override
  _i9.Future<dynamic> getJob(String? id) =>
      (super.noSuchMethod(Invocation.method(#getJob, [id]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> getWalletByPhoneNumber(String? phoneNumber) => (super
      .noSuchMethod(Invocation.method(#getWalletByPhoneNumber, [phoneNumber]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> updateFirebaseToken(
          String? walletAddress, String? firebaseToken) =>
      (super.noSuchMethod(
          Invocation.method(
              #updateFirebaseToken, [walletAddress, firebaseToken]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> addUserContext(Map<dynamic, dynamic>? body) =>
      (super.noSuchMethod(Invocation.method(#addUserContext, [body]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> deleteFirebaseToken(
          String? walletAddress, String? firebaseToken) =>
      (super.noSuchMethod(
          Invocation.method(
              #deleteFirebaseToken, [walletAddress, firebaseToken]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> backupWallet({String? communityAddress}) =>
      (super.noSuchMethod(
          Invocation.method(
              #backupWallet, [], {#communityAddress: communityAddress}),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> joinCommunity(
          _i13.Web3? web3, String? walletAddress, String? communityAddress,
          {String? tokenAddress,
          String? network = r'fuse',
          String? originNetwork,
          String? communityName}) =>
      (super.noSuchMethod(
          Invocation.method(#joinCommunity, [
            web3,
            walletAddress,
            communityAddress
          ], {
            #tokenAddress: tokenAddress,
            #network: network,
            #originNetwork: originNetwork,
            #communityName: communityName
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> transfer(
          _i13.Web3? web3, String? walletAddress, String? receiverAddress,
          {String? tokensAmount,
          BigInt? amountInWei,
          String? network = r'fuse',
          Map<dynamic, dynamic>? transactionBody}) =>
      (super.noSuchMethod(
          Invocation.method(#transfer, [
            web3,
            walletAddress,
            receiverAddress
          ], {
            #tokensAmount: tokensAmount,
            #amountInWei: amountInWei,
            #network: network,
            #transactionBody: transactionBody
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> nftTransfer(
          _i13.Web3? web3,
          String? nftTransferContractAddress,
          String? walletAddress,
          String? contractAddress,
          String? receiverAddress,
          num? tokenId,
          {String? network = r'fuse',
          Map<dynamic, dynamic>? transactionBody}) =>
      (super.noSuchMethod(
          Invocation.method(#nftTransfer, [
            web3,
            nftTransferContractAddress,
            walletAddress,
            contractAddress,
            receiverAddress,
            tokenId
          ], {
            #network: network,
            #transactionBody: transactionBody
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> tokenTransfer(_i13.Web3? web3, String? walletAddress,
          String? tokenAddress, String? receiverAddress, String? tokensAmount,
          {String? network = r'fuse', String? externalId}) =>
      (super.noSuchMethod(
          Invocation.method(#tokenTransfer, [
            web3,
            walletAddress,
            tokenAddress,
            receiverAddress,
            tokensAmount
          ], {
            #network: network,
            #externalId: externalId
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> approveTokenTransfer(
          _i13.Web3? web3, String? walletAddress, String? tokenAddress,
          {String? network = r'fuse',
          num? tokensAmount,
          BigInt? amountInWei}) =>
      (super.noSuchMethod(
          Invocation.method(#approveTokenTransfer, [
            web3,
            walletAddress,
            tokenAddress
          ], {
            #network: network,
            #tokensAmount: tokensAmount,
            #amountInWei: amountInWei
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> transferDaiToDaiPointsOffChain(_i13.Web3? web3,
          String? walletAddress, num? tokensAmount, int? tokenDecimals,
          {String? network}) =>
      (super.noSuchMethod(
          Invocation.method(
              #transferDaiToDaiPointsOffChain,
              [web3, walletAddress, tokensAmount, tokenDecimals],
              {#network: network}),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> callContract(_i13.Web3? web3, String? walletAddress,
          String? contractAddress, String? data,
          {String? network,
          num? ethAmount,
          BigInt? amountInWei,
          Map<dynamic, dynamic>? transactionBody,
          Map<dynamic, dynamic>? txMetadata}) =>
      (super.noSuchMethod(
          Invocation.method(#callContract, [
            web3,
            walletAddress,
            contractAddress,
            data
          ], {
            #network: network,
            #ethAmount: ethAmount,
            #amountInWei: amountInWei,
            #transactionBody: transactionBody,
            #txMetadata: txMetadata
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> approveTokenAndCallContract(
          _i13.Web3? web3,
          String? walletAddress,
          String? tokenAddress,
          String? contractAddress,
          String? data,
          {String? network,
          num? tokensAmount,
          BigInt? amountInWei,
          Map<dynamic, dynamic>? transactionBody,
          Map<dynamic, dynamic>? txMetadata}) =>
      (super.noSuchMethod(
          Invocation.method(#approveTokenAndCallContract, [
            web3,
            walletAddress,
            tokenAddress,
            contractAddress,
            data
          ], {
            #network: network,
            #tokensAmount: tokensAmount,
            #amountInWei: amountInWei,
            #transactionBody: transactionBody,
            #txMetadata: txMetadata
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> multiRelay(List<dynamic>? items) =>
      (super.noSuchMethod(Invocation.method(#multiRelay, [items]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> syncContacts(List<String>? phoneNumbers) =>
      (super.noSuchMethod(Invocation.method(#syncContacts, [phoneNumbers]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> ackSync(int? nonce) =>
      (super.noSuchMethod(Invocation.method(#ackSync, [nonce]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> invite(String? phoneNumber,
          {String? communityAddress = r'',
          String? name = r'',
          String? amount = r'',
          String? symbol = r''}) =>
      (super.noSuchMethod(
          Invocation.method(#invite, [
            phoneNumber
          ], {
            #communityAddress: communityAddress,
            #name: name,
            #amount: amount,
            #symbol: symbol
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> transferTokenToHomeWithAMBBridge(
          _i13.Web3? web3,
          String? walletAddress,
          String? foreignBridgeMediator,
          String? tokenAddress,
          num? tokensAmount,
          int? tokenDecimals,
          {String? network = r'mainnet'}) =>
      (super.noSuchMethod(
          Invocation.method(#transferTokenToHomeWithAMBBridge, [
            web3,
            walletAddress,
            foreignBridgeMediator,
            tokenAddress,
            tokensAmount,
            tokenDecimals
          ], {
            #network: network
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> transferTokenToForeignWithAMBBridge(
          _i13.Web3? web3,
          String? walletAddress,
          String? homeBridgeMediatorAddress,
          String? tokenAddress,
          num? tokensAmount,
          int? tokenDecimals,
          {String? network = r'fuse'}) =>
      (super.noSuchMethod(
          Invocation.method(#transferTokenToForeignWithAMBBridge, [
            web3,
            walletAddress,
            homeBridgeMediatorAddress,
            tokenAddress,
            tokensAmount,
            tokenDecimals
          ], {
            #network: network
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<Map<String, dynamic>> getBeaconByWalletAddress(
          String? walletAddress) =>
      (super.noSuchMethod(
              Invocation.method(#getBeaconByWalletAddress, [walletAddress]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i9.Future<Map<String, dynamic>>);
  @override
  _i9.Future<Map<String, dynamic>> getWalletAddressByMajorAndMonirIds(
          int? major, int? minor) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getWalletAddressByMajorAndMonirIds, [major, minor]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i9.Future<Map<String, dynamic>>);
  @override
  _i9.Future<Map<String, dynamic>> getReferralInfo(String? walletAddress) =>
      (super.noSuchMethod(Invocation.method(#getReferralInfo, [walletAddress]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i9.Future<Map<String, dynamic>>);
  @override
  _i9.Future<Map<String, dynamic>> getUserProfile(String? walletAddress) =>
      (super.noSuchMethod(Invocation.method(#getUserProfile, [walletAddress]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i9.Future<Map<String, dynamic>>);
  @override
  _i9.Future<dynamic> saveUserProfile(Map<dynamic, dynamic>? body) =>
      (super.noSuchMethod(Invocation.method(#saveUserProfile, [body]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> updateAvatar(
          String? accountAddress, String? avatarHash) =>
      (super.noSuchMethod(
          Invocation.method(#updateAvatar, [accountAddress, avatarHash]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> updateDisplayName(
          String? accountAddress, String? displayName) =>
      (super.noSuchMethod(
          Invocation.method(#updateDisplayName, [accountAddress, displayName]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
}

/// A class which mocks [RootRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockRootRouter extends _i1.Mock implements _i14.RootRouter {
  MockRootRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AuthGuard get authGuard =>
      (super.noSuchMethod(Invocation.getter(#authGuard),
          returnValue: _FakeAuthGuard_1()) as _i3.AuthGuard);
  @override
  Map<String, _i5.PageFactory> get pagesMap =>
      (super.noSuchMethod(Invocation.getter(#pagesMap),
              returnValue: <String, _i5.PageFactory>{})
          as Map<String, _i5.PageFactory>);
  @override
  List<_i5.RouteConfig> get routes =>
      (super.noSuchMethod(Invocation.getter(#routes),
          returnValue: <_i5.RouteConfig>[]) as List<_i5.RouteConfig>);
  @override
  _i4.RouteMatcher get matcher =>
      (super.noSuchMethod(Invocation.getter(#matcher),
          returnValue: _FakeRouteMatcher_2()) as _i4.RouteMatcher);
  @override
  _i4.RouteCollection get routeCollection =>
      (super.noSuchMethod(Invocation.getter(#routeCollection),
          returnValue: _FakeRouteCollection_3()) as _i4.RouteCollection);
  @override
  _i5.RouteData get routeData =>
      (super.noSuchMethod(Invocation.getter(#routeData),
          returnValue: _FakeRouteData_4()) as _i5.RouteData);
  @override
  bool get managedByWidget => (super
          .noSuchMethod(Invocation.getter(#managedByWidget), returnValue: false)
      as bool);
  @override
  _i5.PageBuilder get pageBuilder => (super.noSuchMethod(
          Invocation.getter(#pageBuilder),
          returnValue: (_i5.RouteData data) => _FakeAutoRoutePage_5<dynamic>())
      as _i5.PageBuilder);
  @override
  _i5.NavigationHistory get navigationHistory =>
      (super.noSuchMethod(Invocation.getter(#navigationHistory),
          returnValue: _FakeNavigationHistory_6()) as _i5.NavigationHistory);
  @override
  _i6.LocalKey get key => (super.noSuchMethod(Invocation.getter(#key),
      returnValue: _FakeLocalKey_7()) as _i6.LocalKey);
  @override
  _i5.PendingRoutesHandler get pendingRoutesHandler => (super.noSuchMethod(
      Invocation.getter(#pendingRoutesHandler),
      returnValue: _FakePendingRoutesHandler_8()) as _i5.PendingRoutesHandler);
  @override
  _i7.PagelessRoutesObserver get pagelessRoutesObserver =>
      (super.noSuchMethod(Invocation.getter(#pagelessRoutesObserver),
              returnValue: _FakePagelessRoutesObserver_9())
          as _i7.PagelessRoutesObserver);
  @override
  _i5.ActiveGuardObserver get activeGuardObserver => (super.noSuchMethod(
      Invocation.getter(#activeGuardObserver),
      returnValue: _FakeActiveGuardObserver_10()) as _i5.ActiveGuardObserver);
  @override
  int get stateHash =>
      (super.noSuchMethod(Invocation.getter(#stateHash), returnValue: 0)
          as int);
  @override
  _i6.GlobalKey<_i6.NavigatorState> get navigatorKey =>
      (super.noSuchMethod(Invocation.getter(#navigatorKey),
              returnValue: _FakeGlobalKey_11<_i6.NavigatorState>())
          as _i6.GlobalKey<_i6.NavigatorState>);
  @override
  bool get canPopSelfOrChildren =>
      (super.noSuchMethod(Invocation.getter(#canPopSelfOrChildren),
          returnValue: false) as bool);
  @override
  _i5.RouteData get current => (super.noSuchMethod(Invocation.getter(#current),
      returnValue: _FakeRouteData_4()) as _i5.RouteData);
  @override
  _i5.RouteData get topRoute =>
      (super.noSuchMethod(Invocation.getter(#topRoute),
          returnValue: _FakeRouteData_4()) as _i5.RouteData);
  @override
  bool get hasPagelessTopRoute =>
      (super.noSuchMethod(Invocation.getter(#hasPagelessTopRoute),
          returnValue: false) as bool);
  @override
  List<_i5.AutoRoutePage<dynamic>> get stack =>
      (super.noSuchMethod(Invocation.getter(#stack),
              returnValue: <_i5.AutoRoutePage<dynamic>>[])
          as List<_i5.AutoRoutePage<dynamic>>);
  @override
  List<_i5.RoutingController> get childControllers => (super.noSuchMethod(
      Invocation.getter(#childControllers),
      returnValue: <_i5.RoutingController>[]) as List<_i5.RoutingController>);
  @override
  _i5.UrlState get urlState => (super.noSuchMethod(Invocation.getter(#urlState),
      returnValue: _FakeUrlState_12()) as _i5.UrlState);
  @override
  String get currentPath =>
      (super.noSuchMethod(Invocation.getter(#currentPath), returnValue: '')
          as String);
  @override
  String get currentUrl =>
      (super.noSuchMethod(Invocation.getter(#currentUrl), returnValue: '')
          as String);
  @override
  List<_i5.RouteData> get stackData =>
      (super.noSuchMethod(Invocation.getter(#stackData),
          returnValue: <_i5.RouteData>[]) as List<_i5.RouteData>);
  @override
  bool get isTopMost =>
      (super.noSuchMethod(Invocation.getter(#isTopMost), returnValue: false)
          as bool);
  @override
  bool get canNavigateBack => (super
          .noSuchMethod(Invocation.getter(#canNavigateBack), returnValue: false)
      as bool);
  @override
  _i5.StackRouter get root => (super.noSuchMethod(Invocation.getter(#root),
      returnValue: _FakeStackRouter_13()) as _i5.StackRouter);
  @override
  bool get isRoot =>
      (super.noSuchMethod(Invocation.getter(#isRoot), returnValue: false)
          as bool);
  @override
  _i5.RouteMatch<dynamic> get topMatch => (super.noSuchMethod(
      Invocation.getter(#topMatch),
      returnValue: _FakeRouteMatch_14<dynamic>()) as _i5.RouteMatch<dynamic>);
  @override
  bool get hasEntries =>
      (super.noSuchMethod(Invocation.getter(#hasEntries), returnValue: false)
          as bool);
  @override
  int get pageCount =>
      (super.noSuchMethod(Invocation.getter(#pageCount), returnValue: 0)
          as int);
  @override
  List<_i5.RouteMatch<dynamic>> get currentSegments =>
      (super.noSuchMethod(Invocation.getter(#currentSegments),
              returnValue: <_i5.RouteMatch<dynamic>>[])
          as List<_i5.RouteMatch<dynamic>>);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.AutoRouteInformationProvider routeInfoProvider(
          {_i6.RouteInformation? initialRouteInformation}) =>
      (super.noSuchMethod(
              Invocation.method(#routeInfoProvider, [],
                  {#initialRouteInformation: initialRouteInformation}),
              returnValue: _FakeAutoRouteInformationProvider_15())
          as _i5.AutoRouteInformationProvider);
  @override
  _i5.AutoRouterDelegate declarativeDelegate(
          {_i5.RoutesBuilder? routes,
          String? navRestorationScopeId,
          _i5.RoutePopCallBack? onPopRoute,
          String? initialDeepLink,
          _i5.OnNavigateCallBack? onNavigate,
          _i5.NavigatorObserversBuilder? navigatorObservers =
              _i15.AutoRouterDelegate.defaultNavigatorObserversBuilder}) =>
      (super.noSuchMethod(
          Invocation.method(#declarativeDelegate, [], {
            #routes: routes,
            #navRestorationScopeId: navRestorationScopeId,
            #onPopRoute: onPopRoute,
            #initialDeepLink: initialDeepLink,
            #onNavigate: onNavigate,
            #navigatorObservers: navigatorObservers
          }),
          returnValue: _FakeAutoRouterDelegate_16()) as _i5.AutoRouterDelegate);
  @override
  _i5.AutoRouterDelegate delegate(
          {List<_i5.PageRouteInfo<dynamic>>? initialRoutes,
          String? initialDeepLink,
          String? navRestorationScopeId,
          _i6.WidgetBuilder? placeholder,
          _i5.NavigatorObserversBuilder? navigatorObservers =
              _i15.AutoRouterDelegate.defaultNavigatorObserversBuilder}) =>
      (super.noSuchMethod(
          Invocation.method(#delegate, [], {
            #initialRoutes: initialRoutes,
            #initialDeepLink: initialDeepLink,
            #navRestorationScopeId: navRestorationScopeId,
            #placeholder: placeholder,
            #navigatorObservers: navigatorObservers
          }),
          returnValue: _FakeAutoRouterDelegate_16()) as _i5.AutoRouterDelegate);
  @override
  _i5.DefaultRouteParser defaultRouteParser(
          {bool? includePrefixMatches = false}) =>
      (super.noSuchMethod(
          Invocation.method(#defaultRouteParser, [],
              {#includePrefixMatches: includePrefixMatches}),
          returnValue: _FakeDefaultRouteParser_17()) as _i5.DefaultRouteParser);
  @override
  void updateRouteData(_i5.RouteData? data) =>
      super.noSuchMethod(Invocation.method(#updateRouteData, [data]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  _i9.Future<T?> pushWidget<T extends Object?>(_i6.Widget? widget,
          {_i6.RouteTransitionsBuilder? transitionBuilder,
          bool? fullscreenDialog = false,
          Duration? transitionDuration = const Duration(milliseconds: 300)}) =>
      (super.noSuchMethod(
          Invocation.method(#pushWidget, [
            widget
          ], {
            #transitionBuilder: transitionBuilder,
            #fullscreenDialog: fullscreenDialog,
            #transitionDuration: transitionDuration
          }),
          returnValue: Future<T?>.value()) as _i9.Future<T?>);
  @override
  _i9.Future<T?> pushNativeRoute<T extends Object?>(_i6.Route<T>? route) =>
      (super.noSuchMethod(Invocation.method(#pushNativeRoute, [route]),
          returnValue: Future<T?>.value()) as _i9.Future<T?>);
  @override
  _i5.RoutingController topMostRouter({bool? ignorePagelessRoutes = false}) =>
      (super.noSuchMethod(
          Invocation.method(#topMostRouter, [],
              {#ignorePagelessRoutes: ignorePagelessRoutes}),
          returnValue: _FakeRoutingController_18()) as _i5.RoutingController);
  @override
  _i9.Future<bool> pop<T extends Object?>([T? result]) =>
      (super.noSuchMethod(Invocation.method(#pop, [result]),
          returnValue: Future<bool>.value(false)) as _i9.Future<bool>);
  @override
  void popForced<T extends Object?>([T? result]) =>
      super.noSuchMethod(Invocation.method(#popForced, [result]),
          returnValueForMissingStub: null);
  @override
  bool removeLast() => (super.noSuchMethod(Invocation.method(#removeLast, []),
      returnValue: false) as bool);
  @override
  void removeRoute(_i5.RouteData? route, {bool? notify = true}) => super
      .noSuchMethod(Invocation.method(#removeRoute, [route], {#notify: notify}),
          returnValueForMissingStub: null);
  @override
  _i9.Future<T?> push<T extends Object?>(_i5.PageRouteInfo<dynamic>? route,
          {_i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#push, [route], {#onFailure: onFailure}),
          returnValue: Future<T?>.value()) as _i9.Future<T?>);
  @override
  _i9.Future<T?> replace<T extends Object?>(_i5.PageRouteInfo<dynamic>? route,
          {_i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#replace, [route], {#onFailure: onFailure}),
          returnValue: Future<T?>.value()) as _i9.Future<T?>);
  @override
  _i9.Future<void> pushAll(List<_i5.PageRouteInfo<dynamic>>? routes,
          {_i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#pushAll, [routes], {#onFailure: onFailure}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> popAndPushAll(List<_i5.PageRouteInfo<dynamic>>? routes,
          {dynamic onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#popAndPushAll, [routes], {#onFailure: onFailure}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> replaceAll(List<_i5.PageRouteInfo<dynamic>>? routes,
          {_i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#replaceAll, [routes], {#onFailure: onFailure}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i9.Future<void>);
  @override
  void popUntilRoot() =>
      super.noSuchMethod(Invocation.method(#popUntilRoot, []),
          returnValueForMissingStub: null);
  @override
  _i9.Future<T?> popAndPush<T extends Object?, TO extends Object?>(
          _i5.PageRouteInfo<dynamic>? route,
          {TO? result,
          _i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(
              #popAndPush, [route], {#result: result, #onFailure: onFailure}),
          returnValue: Future<T?>.value()) as _i9.Future<T?>);
  @override
  bool removeUntil(_i5.RouteDataPredicate? predicate) =>
      (super.noSuchMethod(Invocation.method(#removeUntil, [predicate]),
          returnValue: false) as bool);
  @override
  void popUntil(_i6.RoutePredicate? predicate) =>
      super.noSuchMethod(Invocation.method(#popUntil, [predicate]),
          returnValueForMissingStub: null);
  @override
  bool removeWhere(_i5.RouteDataPredicate? predicate, {bool? notify = true}) =>
      (super.noSuchMethod(
          Invocation.method(#removeWhere, [predicate], {#notify: notify}),
          returnValue: false) as bool);
  @override
  void updateDeclarativeRoutes(List<_i5.PageRouteInfo<dynamic>>? routes) =>
      super.noSuchMethod(Invocation.method(#updateDeclarativeRoutes, [routes]),
          returnValueForMissingStub: null);
  @override
  _i9.Future<void> navigateAll(List<_i5.RouteMatch<dynamic>>? routes,
          {_i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#navigateAll, [routes], {#onFailure: onFailure}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i9.Future<void>);
  @override
  _i9.Future<T?> pushAndPopUntil<T extends Object?>(
          _i5.PageRouteInfo<dynamic>? route,
          {_i6.RoutePredicate? predicate,
          _i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#pushAndPopUntil, [route],
              {#predicate: predicate, #onFailure: onFailure}),
          returnValue: Future<T?>.value()) as _i9.Future<T?>);
  @override
  _i9.Future<T?> replaceNamed<T extends Object?>(String? path,
          {bool? includePrefixMatches = false,
          _i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#replaceNamed, [
            path
          ], {
            #includePrefixMatches: includePrefixMatches,
            #onFailure: onFailure
          }),
          returnValue: Future<T?>.value()) as _i9.Future<T?>);
  @override
  _i9.Future<T?> pushNamed<T extends Object?>(String? path,
          {bool? includePrefixMatches = false,
          _i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#pushNamed, [
            path
          ], {
            #includePrefixMatches: includePrefixMatches,
            #onFailure: onFailure
          }),
          returnValue: Future<T?>.value()) as _i9.Future<T?>);
  @override
  void popUntilRouteWithName(String? name) =>
      super.noSuchMethod(Invocation.method(#popUntilRouteWithName, [name]),
          returnValueForMissingStub: null);
  @override
  void markUrlStateForReplace() =>
      super.noSuchMethod(Invocation.method(#markUrlStateForReplace, []),
          returnValueForMissingStub: null);
  @override
  void attachChildController(_i5.RoutingController? childController) =>
      super.noSuchMethod(
          Invocation.method(#attachChildController, [childController]),
          returnValueForMissingStub: null);
  @override
  void removeChildController(_i5.RoutingController? childController) =>
      super.noSuchMethod(
          Invocation.method(#removeChildController, [childController]),
          returnValueForMissingStub: null);
  @override
  void notifyAll({bool? forceUrlRebuild = false}) => super.noSuchMethod(
      Invocation.method(#notifyAll, [], {#forceUrlRebuild: forceUrlRebuild}),
      returnValueForMissingStub: null);
  @override
  bool isRouteActive(String? routeName) =>
      (super.noSuchMethod(Invocation.method(#isRouteActive, [routeName]),
          returnValue: false) as bool);
  @override
  bool isRouteDataActive(_i5.RouteData? data) =>
      (super.noSuchMethod(Invocation.method(#isRouteDataActive, [data]),
          returnValue: false) as bool);
  @override
  bool isPathActive(String? path) =>
      (super.noSuchMethod(Invocation.method(#isPathActive, [path]),
          returnValue: false) as bool);
  @override
  _i9.Future<dynamic> navigate(_i5.PageRouteInfo<dynamic>? route,
          {_i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#navigate, [route], {#onFailure: onFailure}),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<void> navigateNamed(String? path,
          {bool? includePrefixMatches = false,
          _i5.OnNavigationFailure? onFailure}) =>
      (super.noSuchMethod(
          Invocation.method(#navigateNamed, [
            path
          ], {
            #includePrefixMatches: includePrefixMatches,
            #onFailure: onFailure
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i9.Future<void>);
  @override
  void navigateBack() =>
      super.noSuchMethod(Invocation.method(#navigateBack, []),
          returnValueForMissingStub: null);
  @override
  T? innerRouterOf<T extends _i5.RoutingController>(String? routeName) =>
      (super.noSuchMethod(Invocation.method(#innerRouterOf, [routeName]))
          as T?);
  @override
  _i9.Future<bool> popTop<T extends Object?>([T? result]) =>
      (super.noSuchMethod(Invocation.method(#popTop, [result]),
          returnValue: Future<bool>.value(false)) as _i9.Future<bool>);
  @override
  _i5.PageRouteInfo<dynamic>? buildPageRoute(String? path,
          {bool? includePrefixMatches = true}) =>
      (super.noSuchMethod(Invocation.method(#buildPageRoute, [
        path
      ], {
        #includePrefixMatches: includePrefixMatches
      })) as _i5.PageRouteInfo<dynamic>?);
  @override
  List<_i5.PageRouteInfo<dynamic>>? buildPageRoutesStack(String? path,
          {bool? includePrefixMatches = true}) =>
      (super.noSuchMethod(Invocation.method(#buildPageRoutesStack, [
        path
      ], {
        #includePrefixMatches: includePrefixMatches
      })) as List<_i5.PageRouteInfo<dynamic>>?);
  @override
  void addListener(_i16.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i16.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
